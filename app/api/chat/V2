'use client'

import { useState } from 'react'
import Link from 'next/link'

// ---------------------
// Layout + Shared Components
// ---------------------

function Header() {
  return (
    <header className="sticky top-0 z-40 bg-white/80 backdrop-blur border-b">
      <div className="mx-auto max-w-6xl px-4 h-14 flex items-center justify-between">
        <Link href="/" className="font-semibold text-lg tracking-tight">
          Moral Clarity AI
        </Link>
        <nav className="flex items-center gap-6 text-sm">
          <Link href="/pricing" className="text-gray-600 hover:text-gray-900">
            Pricing
          </Link>
          <Link href="/pro" className="text-gray-600 hover:text-gray-900">
            Pro
          </Link>
          <Link
            href="/chat"
            className="inline-flex items-center rounded-md bg-indigo-600 px-3 py-1.5 text-white hover:bg-indigo-700"
          >
            Launch App
          </Link>
        </nav>
      </div>
    </header>
  )
}

function Footer() {
  return (
    <footer className="border-t mt-10">
      <div className="mx-auto max-w-6xl px-4 py-10 text-sm text-gray-500">
        <div className="flex flex-wrap items-center justify-between gap-4">
          <p>Â© {new Date().getFullYear()} Moral Clarity AI</p>
          <div className="flex gap-4">
            <a href="/privacy" className="hover:text-gray-700">
              Privacy
            </a>
            <a href="/terms" className="hover:text-gray-700">
              Terms
            </a>
          </div>
        </div>
      </div>
    </footer>
  )
}

// ---------------------
// Upload + Pro Memory Tease
// ---------------------

function UploadTease({
  isPro,
  onFilePick,
}: {
  isPro: boolean
  onFilePick: (files: File[]) => void
}) {
  const [hover, setHover] = useState(false)

  return (
    <div className="mt-3">
      <label
        onMouseEnter={() => setHover(true)}
        onMouseLeave={() => setHover(false)}
        className="inline-flex items-center gap-2 cursor-pointer text-gray-700 hover:text-gray-900"
      >
        <svg width="18" height="18" viewBox="0 0 24 24" className="opacity-80">
          <path
            fill="currentColor"
            d="M16.5,6.5 L9,14c-1.657,1.657-.343,4,1.5,4c.828,0,1.5-.672,1.5-1.5l7-7"
          />
        </svg>
        <span>Attach files</span>
        <input
          type="file"
          className="hidden"
          multiple
          onChange={(e) => onFilePick(Array.from(e.target.files ?? []))}
        />
      </label>

      {!isPro && (
        <div
          className={`transition-all ${
            hover ? 'opacity-100' : 'opacity-90'
          } mt-3 rounded-lg border border-dashed p-4 bg-indigo-50`}
        >
          <div className="flex items-start justify-between gap-3">
            <div>
              <p className="font-medium text-gray-900">Pro Memory</p>
              <p className="text-sm text-gray-500">
                Upload PDFs, slides, and docs. Weâ€™ll remember them for context in
                every chat.
              </p>
            </div>
            <a
              href="/pro"
              className="shrink-0 rounded-md bg-indigo-600 px-3 py-1.5 text-white hover:bg-indigo-700"
            >
              Upgrade
            </a>
          </div>
        </div>
      )}
    </div>
  )
}

// ---------------------
// Main Chat Experience
// ---------------------

export default function ChatPage() {
  const [message, setMessage] = useState('')
  const [reply, setReply] = useState<string | null>(null)
  const [files, setFiles] = useState<File[]>([])
  const isPro = false // TODO: replace with real subscription check

  async function sendMessage() {
    if (!message.trim()) return
    const res = await fetch('/api/chat/v2', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        message,
        files: files.map((f) => f.name),
        memory: isPro,
      }),
    })
    const data = await res.json()
    setReply(data.reply)
  }

  return (
    <div className="flex flex-col min-h-screen bg-white">
      <Header />

      <main className="flex-1 mx-auto w-full max-w-3xl px-4 py-8">
        <div className="space-y-6">
          <h1 className="text-2xl font-semibold text-gray-900">
            Files that Think ðŸ§ 
          </h1>
          <p className="text-gray-600 leading-relaxed">
            Ask anything â€” your moral compass for clarity, logic, and calm.
            Pro users can upload files to add permanent context and memory.
          </p>

          <div className="border rounded-lg bg-gray-50 p-4 min-h-[150px]">
            {reply ? (
              <pre className="whitespace-pre-wrap text-gray-800">{reply}</pre>
            ) : (
              <span className="text-gray-400 italic">
                Your responses will appear hereâ€¦
              </span>
            )}
          </div>

          <div className="border-t pt-4">
            <div className="flex gap-2">
              <input
                value={message}
                onChange={(e) => setMessage(e.target.value)}
                placeholder="Ask something with clarityâ€¦"
                className="flex-1 rounded-md border px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
              <button
                onClick={sendMessage}
                className="rounded-md bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700"
              >
                Send
              </button>
            </div>
            <UploadTease isPro={isPro} onFilePick={setFiles} />
          </div>
        </div>
      </main>

      <Footer />
    </div>
  )
}
